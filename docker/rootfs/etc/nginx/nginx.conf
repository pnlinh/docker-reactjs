daemon            off;
error_log         /var/log/nginx/error.log;
pid               /run/nginx.pid;
user              nginx;
worker_processes  1;
events            { worker_connections  1024; }

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    ### enable gzip
    gzip               on;
    gzip_static        on;
    gzip_disable       "msie6";
    gzip_http_version  1.1;
    gzip_proxied       expired no-cache no-store private auth;
    gzip_vary          on;
    gzip_comp_level    5;
    gzip_min_length    10240;

    gzip_types
      application/atom+xml
      application/javascript
      application/x-javascript
      application/json
      application/rss+xml
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/svg+xml svg svgz
      image/x-icon
      text/css
      text/javascript
      text/plain
      text/x-component
      text/xml;

    server {
        listen       8001 default;
        server_name  _;

        root                 /app;
        index                index.html;
        charset              utf-8;
        sendfile             off;
        tcp_nopush           on;
        tcp_nodelay          on;
        keepalive_timeout    65;
        error_log            /var/log/nginx/app-error.log error;

        location = /favicon.ico { access_log off; log_not_found off; }

        location / {
            try_files $uri $uri/ $uri/index.html /index.html;
        }

        # Caching service worker is dangerous cause SW has own cache with application's files.
        # If we cache SW user will never receive any update cause of CDN's caching.
        location ~ ^/service-worker.js$ {
            expires 5m;
            add_header Cache-Control public;
            access_log off;
        }

        location ~* \.(jpg|jpeg|png|gif|ico|css|js|ttf|woff|woff2|svg)$ {
            expires max;
            add_header Cache-Control public;
            access_log off;
        }

        # Load Balancer healthcheck
        location ~ ^/elb-status {
            access_log off;
            default_type text/plain;
            return 200;
        }
    }
}
